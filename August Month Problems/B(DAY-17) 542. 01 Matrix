class Solution {
    public int[][] updateMatrix(int[][] mat) {
        int n=mat.length,m=mat[0].length;
        int[][]ans=new int[n][m];
        int[][]vis=new int[n][m];
        Queue<int[]>q=new LinkedList<>();
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(mat[i][j]==0){
                    vis[i][j]=1;
                    q.add(new int[]{i,j,0});
                }
            }
        }
        int[][]del={{-1,0},{0,1},{1,0},{0,-1}};
        while(!q.isEmpty()){
            int[]trio=q.poll();
            int row=trio[0],col=trio[1],dist=trio[2];
            ans[row][col]=dist;
            for(int i=0;i<4;i++){
                int nrow=row+del[i][0];
                int ncol=col+del[i][1];
                if(nrow>=0 && nrow<n && ncol>=0 && ncol<m && vis[nrow][ncol]==0 && mat[nrow][ncol]==1){
                    vis[nrow][ncol]=1;
                    q.add(new int[]{nrow,ncol,dist+1});
                }
            }
        }
    return ans;  
    }
}

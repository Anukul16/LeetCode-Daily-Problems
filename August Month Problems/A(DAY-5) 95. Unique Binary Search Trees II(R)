/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<TreeNode> generateTrees(int n) {
        return solve(1,n);
    }
    public List<TreeNode>solve(int start,int end){
        List<TreeNode>temp=new ArrayList<>();
        if(start>end){
            temp.add(null);
            return temp;
        }

        for(int i=start;i<=end;i++){
            List<TreeNode>left_BSTs=solve(start,i-1);
            List<TreeNode>right_BSTs=solve(i+1,end);
            for(TreeNode l:left_BSTs){
                for(TreeNode r:right_BSTs){
                    TreeNode node=new TreeNode(i);
                    node.left=l;
                    node.right=r;
                    temp.add(node);
                }
            }
        }
        return temp;
    }
}

class Solution {
    int[][]dir={{-1,0},{0,1},{1,0},{0,-1}};
    Integer dp[][];
    int mod=(int)1e9+7;

    public int countPaths(int[][] grid) {
        int n=grid.length;
        int m=grid[0].length;
        dp=new Integer[n][m];
        int result=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                result=(result+dfs(i,j,grid)) % mod;
            }
        }
        return result;
    }
    
    public int  dfs(int r,int c,int[][]grid){
        if(dp[r][c]!=null)return dp[r][c];
       int ans=1;
       for(int d[]:dir){
           int rDash=r+d[0];
           int cDash=c+d[1];
           if(rDash>=0 && rDash<grid.length && cDash>=0 && cDash<grid[0].length && grid[rDash][cDash]<grid[r][c]){
               ans=(ans+dfs(rDash,cDash,grid)) % mod;
           }
       }
       return dp[r][c]=ans;
    }
}
